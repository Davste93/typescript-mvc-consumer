{"version":3,"sources":["implementation/config/config.ts"],"names":[],"mappings":"AAAA,EAAE;AACF,EAAE;AACF,+DAA+D;AAC/D,uEAAuE;AACvE,qEAAqE;AACrE,6EAA6E;AAC7E,oDAAoD;AACpD,EAAE;AACF,+EAA+E;AAC/E,EAAE;AACF,wBAAwB;AACxB,8DAA8D;AAC9D,IAAI;AACJ,EAAE;AACF,0BAA0B;AAC1B,gDAAgD;AAChD,EAAE;AACF,IAAI;AACJ,EAAE;AACF,EAAE;AACF,EAAE;AACF,6BAA6B;AAC7B,kIAAkI;AAClI,kIAAkI;AAClI,EAAE;AACF,2IAA2I;AAC3I,yGAAyG;AACzG,qEAAqE","file":"implementation/config/config.js","sourcesContent":["//\n//\n// import UserDataRepository from \"../data/UserDataRepository\";\n// import UserDataRepositoryImpl from \"../data/UserDataRepositoryImpl\";\n// import AddressDataRepository from \"../data/AddressDataRepository\";\n// import AddressDataRepositoryImpl from \"../data/AddressDataRepositoryImpl\";\n// import UserService from \"../service/UserService\";\n//\n// import {Inject, TypeBinding, Kernel, TypeBindingScopeEnum} from \"inversify\";\n//\n// export class Config {\n//   public static BASEURL : string = \"http://localhost:8091\";\n// }\n//\n// export class Services {\n//     public static userService  : UserService;\n//\n// }\n//\n//\n//\n// var kernel = new Kernel();\n// kernel.bind(new TypeBinding<UserDataRepository>(\"UserDataRepository\", UserDataRepositoryImpl, TypeBindingScopeEnum.Singleton));\n// kernel.bind(new TypeBinding<UserDataRepository>(\"UserDataRepository\", UserDataRepositoryImpl, TypeBindingScopeEnum.Singleton));\n//\n// kernel.bind(new TypeBinding<AddressDataRepository>(\"AddressDataRepository\", AddressDataRepositoryImpl, TypeBindingScopeEnum.Singleton));\n// kernel.bind(new TypeBinding<UserService>(\"UserService\", UserService, TypeBindingScopeEnum.Singleton));\n// Services.userService = kernel.resolve<UserService>(\"UserService\");\n"],"sourceRoot":"/source/"}
